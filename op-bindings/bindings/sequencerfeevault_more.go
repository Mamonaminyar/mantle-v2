// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/ethereum-optimism/optimism/op-bindings/solc"
)

const SequencerFeeVaultStorageLayoutJSON = "{\"storage\":[{\"astId\":1000,\"contract\":\"contracts/L2/SequencerFeeVault.sol:SequencerFeeVault\",\"label\":\"totalProcessed\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_uint256\"}],\"types\":{\"t_uint256\":{\"encoding\":\"inplace\",\"label\":\"uint256\",\"numberOfBytes\":\"32\"}}}"

var SequencerFeeVaultStorageLayout = new(solc.StorageLayout)

var SequencerFeeVaultDeployedBin = "0x6080604052600436106100695760003560e01c806384411d651161004357806384411d651461010c578063d3e5792b14610130578063d4ff92181461016457600080fd5b80630d9019e1146100755780633ccfd60b146100d357806354fd4d50146100ea57600080fd5b3661007057005b600080fd5b34801561008157600080fd5b506100a97f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100df57600080fd5b506100e8610197565b005b3480156100f657600080fd5b506100ff6101fd565b6040516100ca919061040d565b34801561011857600080fd5b5061012260005481565b6040519081526020016100ca565b34801561013c57600080fd5b506101227f000000000000000000000000000000000000000000000000000000000000000081565b34801561017057600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006100a9565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f746869732066756e6374696f6e206e65656420746f20646973637573732e0000604482015260640160405180910390fd5b60606102287f00000000000000000000000000000000000000000000000000000000000000006102a0565b6102517f00000000000000000000000000000000000000000000000000000000000000006102a0565b61027a7f00000000000000000000000000000000000000000000000000000000000000006102a0565b60405160200161028c9392919061045e565b604051602081830303815290604052905090565b6060816000036102e357505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561030d57806102f781610503565b91506103069050600a8361056a565b91506102e7565b60008167ffffffffffffffff8111156103285761032861057e565b6040519080825280601f01601f191660200182016040528015610352576020820181803683370190505b5090505b84156103d5576103676001836105ad565b9150610374600a866105c4565b61037f9060306105d8565b60f81b818381518110610394576103946105f0565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506103ce600a8661056a565b9450610356565b949350505050565b60005b838110156103f85781810151838201526020016103e0565b83811115610407576000848401525b50505050565b602081526000825180602084015261042c8160408501602087016103dd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600084516104708184602089016103dd565b80830190507f2e0000000000000000000000000000000000000000000000000000000000000080825285516104ac816001850160208a016103dd565b600192019182015283516104c78160028401602088016103dd565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610534576105346104d4565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826105795761057961053b565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000828210156105bf576105bf6104d4565b500390565b6000826105d3576105d361053b565b500690565b600082198211156105eb576105eb6104d4565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea164736f6c634300080f000a"

func init() {
	if err := json.Unmarshal([]byte(SequencerFeeVaultStorageLayoutJSON), SequencerFeeVaultStorageLayout); err != nil {
		panic(err)
	}

	layouts["SequencerFeeVault"] = SequencerFeeVaultStorageLayout
	deployedBytecodes["SequencerFeeVault"] = SequencerFeeVaultDeployedBin
}
