// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/ethereum-optimism/optimism/op-bindings/solc"
)

const L2ToL1MessagePasserStorageLayoutJSON = "{\"storage\":[{\"astId\":1000,\"contract\":\"contracts/L2/L2ToL1MessagePasser.sol:L2ToL1MessagePasser\",\"label\":\"sentMessages\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_mapping(t_bytes32,t_bool)\"},{\"astId\":1001,\"contract\":\"contracts/L2/L2ToL1MessagePasser.sol:L2ToL1MessagePasser\",\"label\":\"msgNonce\",\"offset\":0,\"slot\":\"1\",\"type\":\"t_uint240\"}],\"types\":{\"t_bool\":{\"encoding\":\"inplace\",\"label\":\"bool\",\"numberOfBytes\":\"1\"},\"t_bytes32\":{\"encoding\":\"inplace\",\"label\":\"bytes32\",\"numberOfBytes\":\"32\"},\"t_mapping(t_bytes32,t_bool)\":{\"encoding\":\"mapping\",\"label\":\"mapping(bytes32 =\u003e bool)\",\"numberOfBytes\":\"32\",\"key\":\"t_bytes32\",\"value\":\"t_bool\"},\"t_uint240\":{\"encoding\":\"inplace\",\"label\":\"uint240\",\"numberOfBytes\":\"30\"}}}"

var L2ToL1MessagePasserStorageLayout = new(solc.StorageLayout)

var L2ToL1MessagePasserDeployedBin = "0x6080604052600436106100695760003560e01c806354fd4d501161004357806354fd4d501461010a57806382e3702d1461012c578063ecc704281461016c57600080fd5b806339fd0090146100b55780633f827a5a146100c857806344df8e70146100f557600080fd5b366100b0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526000602482015260440160405180910390fd5b005b600080fd5b6100ae6100c336600461078a565b6101d1565b3480156100d457600080fd5b506100dd600181565b60405161ffff90911681526020015b60405180910390f35b34801561010157600080fd5b506100ae61039f565b34801561011657600080fd5b5061011f6104ee565b6040516100ec9190610912565b34801561013857600080fd5b5061015c61014736600461092c565b60006020819052908152604090205460ff1681565b60405190151581526020016100ec565b34801561017857600080fd5b506101c36001547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b6040519081526020016100ec565b600061026e6040518060e0016040528061022b6001547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b815233602082015273ffffffffffffffffffffffffffffffffffffffff871660408201523460608201526080810188905260a0810186905260c001849052610591565b600081815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055905073ffffffffffffffffffffffffffffffffffffffff8416336103096001547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b7f5da382596b838a63b4248e533d8e399b3b0f13ba6c6679f670489d44716cb1733489888888604051610340959493929190610945565b60405180910390a45050600180547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8082168301167fffff000000000000000000000000000000000000000000000000000000000000909116179055505050565b476103a9816105e3565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073deaddeaddeaddeaddeaddeaddeaddeaddead1111906370a0823190602401602060405180830381865afa158015610414573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610438919061097c565b6040517f9dc29fac0000000000000000000000000000000000000000000000000000000081523060048201526024810182905290915073deaddeaddeaddeaddeaddeaddeaddeaddead111190639dc29fac90604401600060405180830381600087803b1580156104a757600080fd5b505af11580156104bb573d6000803e3d6000fd5b50506040518492507f7967de617a5ac1cc7eba2d6f37570a0135afa950d8bb77cdd35f0d0b4e85a16f9150600090a25050565b60606105197f0000000000000000000000000000000000000000000000000000000000000000610612565b6105427f0000000000000000000000000000000000000000000000000000000000000000610612565b61056b7f0000000000000000000000000000000000000000000000000000000000000000610612565b60405160200161057d93929190610995565b604051602081830303815290604052905090565b80516020808301516040808501516060860151608087015160a088015160c089015194516000986105c6989097969101610a0b565b604051602081830303815290604052805190602001209050919050565b806040516105f09061074f565b6040518091039082f090508015801561060d573d6000803e3d6000fd5b505050565b60608160000361065557505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561067f578061066981610a98565b91506106789050600a83610aff565b9150610659565b60008167ffffffffffffffff81111561069a5761069a61075b565b6040519080825280601f01601f1916602001820160405280156106c4576020820181803683370190505b5090505b8415610747576106d9600183610b13565b91506106e6600a86610b2a565b6106f1906030610b3e565b60f81b81838151811061070657610706610b56565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610740600a86610aff565b94506106c8565b949350505050565b600880610b8683390190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600080608085870312156107a057600080fd5b84359350602085013573ffffffffffffffffffffffffffffffffffffffff811681146107cb57600080fd5b925060408501359150606085013567ffffffffffffffff808211156107ef57600080fd5b818701915087601f83011261080357600080fd5b8135818111156108155761081561075b565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561085b5761085b61075b565b816040528281528a602084870101111561087457600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60005b838110156108b357818101518382015260200161089b565b838111156108c2576000848401525b50505050565b600081518084526108e0816020860160208601610898565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061092560208301846108c8565b9392505050565b60006020828403121561093e57600080fd5b5035919050565b85815284602082015283604082015260a06060820152600061096a60a08301856108c8565b90508260808301529695505050505050565b60006020828403121561098e57600080fd5b5051919050565b600084516109a7818460208901610898565b80830190507f2e0000000000000000000000000000000000000000000000000000000000000080825285516109e3816001850160208a01610898565b600192019182015283516109fe816002840160208801610898565b0160020195945050505050565b878152600073ffffffffffffffffffffffffffffffffffffffff80891660208401528088166040840152508560608301528460808301528360a083015260e060c0830152610a5c60e08301846108c8565b9998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ac957610ac9610a69565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610b0e57610b0e610ad0565b500490565b600082821015610b2557610b25610a69565b500390565b600082610b3957610b39610ad0565b500690565b60008219821115610b5157610b51610a69565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe608060405230fffea164736f6c634300080f000a"

func init() {
	if err := json.Unmarshal([]byte(L2ToL1MessagePasserStorageLayoutJSON), L2ToL1MessagePasserStorageLayout); err != nil {
		panic(err)
	}

	layouts["L2ToL1MessagePasser"] = L2ToL1MessagePasserStorageLayout
	deployedBytecodes["L2ToL1MessagePasser"] = L2ToL1MessagePasserDeployedBin
}
